name: "Regression Check"

on:
  workflow_dispatch:
    inputs:
      baseline-sha:
        description: "The SHA to use as the baseline (optional). If not provided, it defaults to the SHA from 24 hours ago."
        required: false
      comparison-sha:
        description: "The SHA to use for comparison (optional). If not provided, it defaults to the current HEAD of the origin/master branch."
        required: false
  schedule:
    - cron: '0 6 * * 1-5' # Runs at 6 AM UTC on weekdays (Monday to Friday)

jobs:
  resolve-shas:
    runs-on: ubuntu-latest
    outputs:
      baseline-sha: ${{ steps.set_and_validate_shas.outputs.baseline_sha }}
      comparison-sha: ${{ steps.set_and_validate_shas.outputs.comparison_sha }}
      baseline-tag: ${{ steps.set_and_validate_shas.outputs.baseline_tag }}
      comparison-tag: ${{ steps.set_and_validate_shas.outputs.comparison_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # need to pull repository history to find merge bases

      - name: Set and Validate SHAs
        id: set_and_validate_shas
        run: |
          # Set baseline SHA
          if [ -z "${{ github.event.inputs.baseline-sha }}" ]; then
            BASELINE_SHA=$(git rev-list -n 1 --before="24 hours ago" origin/master)
            echo "Using baseline SHA from 24 hours ago: ${BASELINE_SHA}"
          else
            BASELINE_SHA="${{ github.event.inputs.baseline-sha }}"
            echo "Using provided baseline SHA: ${BASELINE_SHA}"
          fi
          
          # Validate baseline SHA
          if [ -n "${BASELINE_SHA}" ] && git cat-file -e "${BASELINE_SHA}^{commit}"; then
            echo "Baseline SHA is valid."
          else
            echo "Invalid baseline SHA: ${BASELINE_SHA}."
            exit 1
          fi
          
          # Set comparison SHA
          if [ -z "${{ github.event.inputs.comparison-sha }}" ]; then
            COMPARISON_SHA=$(git rev-parse origin/master)
            echo "Using current HEAD for comparison SHA: ${COMPARISON_SHA}"
          else
            COMPARISON_SHA="${{ github.event.inputs.comparison-sha }}"
            echo "Using provided comparison SHA: ${COMPARISON_SHA}"
          fi
          
          # Validate comparison SHA
          if [ -n "${COMPARISON_SHA}" ] && git cat-file -e "${COMPARISON_SHA}^{commit}"; then
            echo "Comparison SHA is valid."
          else
            echo "Invalid comparison SHA: ${COMPARISON_SHA}."
            exit 1
          fi
          
          # Set tags and export them
          BASELINE_TAG="workflow_dispatch-${COMPARISON_SHA}-${BASELINE_SHA}"
          COMPARISON_TAG="workflow_dispatch-${COMPARISON_SHA}-${COMPARISON_SHA}"

          echo "baseline_sha=${BASELINE_SHA}" >> $GITHUB_OUTPUT
          echo "comparison_sha=${COMPARISON_SHA}" >> $GITHUB_OUTPUT
          echo "baseline_tag=${BASELINE_TAG}" >> $GITHUB_OUTPUT
          echo "comparison_tag=${COMPARISON_TAG}" >> $GITHUB_OUTPUT

  display-results:
    runs-on: ubuntu-latest
    needs: resolve-shas
    steps:
      - name: Display Results
        run: |
          echo "Baseline SHA: ${{ needs.resolve-shas.outputs.baseline-sha }}"
          echo "Comparison SHA: ${{ needs.resolve-shas.outputs.comparison-sha }}"
          echo "Baseline Tag: ${{ needs.resolve-shas.outputs.baseline-tag }}"
          echo "Comparison Tag: ${{ needs.resolve-shas.outputs.comparison-tag }}"
